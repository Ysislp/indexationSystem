version: '3'

services:

  docker-mysql:
    image: mysql:5.7
    restart: always
    container_name: docker-mysql
    ports:
      - "3306:3306"
    volumes:
      - sql-spring:/var/lib/mysql
    networks:
      - indexationsystem-network
    environment:
      MYSQL_HOST: docker-mysql
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_news
      INSTANCE_ID: is_1
      

  nginx:
    image: nginx:latest
    container_name: indexationsystem-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on: 
      - indexationsystem1
      - indexationsystem2
    networks:
      - indexationsystem-network

  indexationsystem1:
    image: "ysisbel/isystem:1.0-SNAPSHOT"
    container_name: is_1
    restart: on-failure
    expose:
      - "80"
    depends_on:
      - docker-mysql
    networks: 
      - indexationsystem-network
    environment:
      MYSQL_HOST: docker-mysql
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_news
      INSTANCE_ID: is_1

  indexationsystem2:
    image: "ysisbel/isystem:1.0-SNAPSHOT"
    container_name: is_2
    restart: on-failure
    expose:
      - "80"
    depends_on:
      - docker-mysql
    networks: 
      - indexationsystem-network
    environment:
      MYSQL_HOST: docker-mysql
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_news
      INSTANCE_ID: is_2

networks:
  indexationsystem-network:
    driver: bridge

volumes: 
  sql-spring:
